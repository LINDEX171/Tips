-----pour que les donnees proviennet de nos données du clients (react ect...)--
on cree d'abord un request n tapant la commande php artisan make:request CreatePostRequest
et puis on le verra dans app/http/requests
au niveau de notre controller on mets
public function store(CreatePostRequest $request){

et puis au niveau app/http/requests/CreatePostRequest on mets autorize() a true
et on reviens sur postman on mets http://127.0.0.1:8000/api/posts/create et les
donnees sont envoyer(mais pas encore dynamique)
____faisons d'abord les controlles de saisi ___
y'a que le titre qui dit etre forcement fournis
dans app/http/requests/CreatePostRequest mettre
public function rules(): array
    {
        return [
            'titre'=>'required'
        ];
    }
et on remarquera que si on valide au niveau e postman les données ne seront pas enregistrer
au niveau de la bdd

on cree une fonction pour les messages d'erreurs 
public function failedValidation(Validator $validator){
//throw : Utilisé pour lancer une exception en PHP.
        throw new HttpResponseException(response()->json([
            'success'=>false,
            'error'=>true,
            'message'=>'Erreur de valdation',
            'errorsList'=>$validator->errors(),
        ]));
    }

si on veut personnaliser les messages on ajute
 public function messages()
    {
        return [
            'titre.required'=> 'un titre doit etre fourni'
        ];
    }

si on repart dans postman on valide on verra le message d'erreur 

____recuperer les données qui seront passés par l'utilisateur __
dans notre fonction store au niveau du controller mettre

public function store(CreatePostRequest $request){
        
        $post = new Post();
        $post -> titre = $request -> titre;
        $post -> description = $request -> description;

        $post -> save();
    } 

et puis dans postman aller dans body row json et apres passer
{
    "titre" : "titre provenant de l'application client",
    "description" : "description fe"
}
apres on clique sur send 
au niveau de la bdd on verra les infos passer au niveau de notre postman

----message de succes (ton post a été bien créé )
ajouter au niveau de la fonction store du controller
return response()->json([
            'status_code'=>200,
            'statu_message'=>'le post ajouté',
            'data'=>$post
            ]);

comme ca  : 
public function store(CreatePostRequest $request){
        
        $post = new Post();
        $post -> titre = $request -> titre;
        $post -> description = $request -> description;
        $post -> save();

        return response()->json([
            'status_code'=>200,
            'statu_message'=>'le post ajouté',
            'data'=>$post
            ]);
    } 

------------------try catch pour en cas d'erreur __________
envelopper notre fonction store dans un try catch comme ca
try {
        $post = new Post();
        $post -> titre = $request -> titre;
        $post -> description = $request -> description;
        $post -> save();

        return response()->json([
            'status_code'=>200,
            'statu_message'=>'le post ajouté',
            'data'=>$post
            ]);
        } catch (Exception $e) {
            return response()->json($e);
        }


et on verra que si on eteint le serveur ca nous envoies un message comme quoi le serveur 
n'a pas été demarré